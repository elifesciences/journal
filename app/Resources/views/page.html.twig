{% extends '::base.html.twig' %}

{% block head %}

    <style>
        {% if criticalCss is not defined %}
        {% set criticalCss = 'default' %}
        {% endif %}
        {% include '@build/critical-css/' ~ criticalCss ~ '.css' ignore missing %}
    </style>

    {# We don't use gulp-favicon's generated file as it includes things we don't want, such as apple-mobile-web-app-capable #}
    <link rel="apple-touch-icon" sizes="57x57" href="{{ asset('assets/favicons/apple-touch-icon-57x57.png') }}">
    <link rel="apple-touch-icon" sizes="60x60" href="{{ asset('assets/favicons/apple-touch-icon-60x60.png') }}">
    <link rel="apple-touch-icon" sizes="72x72" href="{{ asset('assets/favicons/apple-touch-icon-72x72.png') }}">
    <link rel="apple-touch-icon" sizes="76x76" href="{{ asset('assets/favicons/apple-touch-icon-76x76.png') }}">
    <link rel="apple-touch-icon" sizes="114x114" href="{{ asset('assets/favicons/apple-touch-icon-114x114.png') }}">
    <link rel="apple-touch-icon" sizes="120x120" href="{{ asset('assets/favicons/apple-touch-icon-120x120.png') }}">
    <link rel="apple-touch-icon" sizes="144x144" href="{{ asset('assets/favicons/apple-touch-icon-144x144.png') }}">
    <link rel="apple-touch-icon" sizes="152x152" href="{{ asset('assets/favicons/apple-touch-icon-152x152.png') }}">
    <link rel="apple-touch-icon" sizes="180x180" href="{{ asset('assets/favicons/apple-touch-icon-180x180.png') }}">
    <link rel="icon" type="image/svg+xml" href="{{ asset('assets/favicons/favicon.svg') }}">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ asset('assets/favicons/favicon-32x32.png') }}">
    <link rel="icon" type="image/png" sizes="192x192" href="{{ asset('assets/favicons/android-chrome-192x192.png') }}">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ asset('assets/favicons/favicon-16x16.png') }}">
    <link rel="shortcut icon" href="{{ asset('assets/favicons/favicon.ico') }}">
    <link rel="manifest" href="{{ asset('assets/favicons/manifest.json') }}">
    <meta name="theme-color" content="#ffffff">
    <meta name="application-name" content="eLife">

    {% block meta %}

        {% if block('canonical') is defined %}
            {% set canonical = block('canonical')|trim %}
        {% elseif paginator is defined and paginator %}
            {% set canonical = paginator.currentPagePath %}
        {% else %}
            {% set canonical = path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params')) %}
        {% endif %}

        {% block dublin_core %}

            {% if item and item.title is defined %}

                <meta name="dc.format" content="text/html">
                <meta name="dc.language" content="en">
                <meta name="dc.publisher" content="eLife Sciences Publications Limited">

                {% if item.fullTitle is defined and item.fullTitle %}
                    <meta name="dc.title" content="{{ item.fullTitle|striptags }}">
                {% else %}
                    <meta name="dc.title" content="{{ item.title|striptags }}">
                {% endif %}

                {% if item.doi is defined and item.doi %}
                    <meta name="dc.identifier" content="doi:{{ item.doi }}">
                {% elseif item.identifier is defined %}
                    <meta name="dc.identifier" content="{{ item.identifier }}">
                    <meta name="dc.relation.ispartof" content="elifesciences.org">
                {% endif %}

                {% if item.publishedDate is defined and item.publishedDate %}
                    <meta name="dc.date" content="{{ item.publishedDate|date('Y-m-d', 'UTC') }}">

                    {% if item.copyright is defined and item.copyright %}
                        <meta name="dc.rights" content="
                            {%- if item.copyright.holder -%}© {{ item.publishedDate|date('Y', 'UTC') }} {{ item.copyright.holder }}. {% endif -%}
                            {{- item.copyright.statement|striptags -}}
                        ">
                    {% else %}
                        <meta name="dc.rights"
                              content="© {{ item.publishedDate|date('Y', 'UTC') }} eLife Sciences Publications Limited. This article is distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use and redistribution provided that the original author and source are credited.">
                    {% endif %}

                {% endif %}

                {% if item.digest is defined and item.digest and item.digest.content|length %}
                    <meta name="dc.description" content="
                        {%- for paragraph in item.digest.content -%}
                            {{ paragraph.text|striptags }}
                            {%- if not loop.last %} {% endif %}
                        {%- endfor -%}
                    ">
                {% endif %}

                {% if item.authors is defined %}
                    {% for author in item.authors %}
                        {% if author.affiliations is defined %}
                            <meta name="dc.contributor" content="{{ author.toString }}">
                            {% if author.people is defined %}
                                {% for person in author.people %}
                                    <meta name="dc.contributor" content="{{ person.preferredName }}">
                                {% endfor %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                {% endif %}

            {% endif %}

        {% endblock %}

        <meta property="og:site_name" content="eLife">
        <meta property="og:url" content="{{ absolute_url(canonical) }}">
        <meta property="og:title" content="{{ title|striptags }}">
        <meta name="twitter:site" content="@eLife">

        {% if item is defined and item.impactStatement is defined %}
            {% set description = item.impactStatement %}
        {% elseif contentHeader is defined and contentHeader.impactStatement is defined %}
            {% set description = contentHeader.impactStatement %}
        {% elseif leadParas is defined and leadParas %}
            {% set description = render_pattern(leadParas) %}
        {% endif %}
        {% if description is defined %}
            <meta property="og:description" content="{{ description|striptags|single_line|trim }}">
            <meta name="description" content="{{ description|striptags|single_line|trim }}">
        {% endif %}

        {% if contentHeader is defined and contentHeader.image is defined %}
            <meta name="twitter:card" content="summary_large_image">
            <meta property="og:image" content="{{ absolute_url(contentHeader.image.fallback.defaultPath) }}">
            <meta property="og:image:width" content="1114">
            <meta property="og:image:height" content="336">
        {% else %}
            <meta name="twitter:card" content="summary">
        {% endif %}
        {% if contentHeader is defined and contentHeader.meta is defined %}
            <meta property="og:type" content="article">
            {% if contentHeader.subjects is defined %}
                {% for subject in contentHeader.subjects.list %}
                    <meta property="og:article:section" content="{{ subject.name }}">
                {% endfor %}
            {% endif %}
        {% endif %}

        <link rel="canonical" href="{{ canonical }}">

        {% if paginator is defined and paginator %}

            {% if paginator.previousPage and paginator %}
                <link rel="prev" href="{{ paginator.previousPagePath }}">
            {% endif %}

            {% if paginator.nextPage and paginator %}
                <link rel="next" href="{{ paginator.nextPagePath }}">
            {% endif %}

        {% endif %}

    {% endblock %}

    <!--[if lt IE 9]>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js"></script>
    <![endif]-->

    <script>
        WebFontConfig = {
            custom: {
                families: ["Avenir Next Webfont"],
                urls: ["{{ preload(asset('assets/patterns/fonts/fonts.css'), {as: 'style', nopush: true}) }}"]
            }
        };

        {% if gtm_id %}
        window.gtmDataLayer = window.gtmDataLayer || [];

        {% if item.publishedDate is defined and item.publishedDate %}
        window.gtmDataLayer.push(
            {
                {% if item.subjects is defined and item.subjects|length -%}
                'articleSubjects': '{% for subject in item.subjects %}{{ subject.name }}{% if not loop.last %}, {% endif %}{% endfor %}',
                {%- endif %}

                'articleType': '{% if item.type is defined %}{{ model_name(item.type) }}{% else %}{{ model_name(item.identifier.type) }}{% endif %}',
                'articlePublishDate': '{{ item.publishedDate|date('M j, Y') }}'
            }
        );
        {% endif %}

        (function (w, d, s, l, i) {
            w[l] = w[l] || [];
            w[l].push({
                'gtm.start': new Date().getTime(), event: 'gtm.js'
            });
            var f = d.getElementsByTagName(s)[0],
                j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : '';
            j.async = true;
            j.src =
                'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
            f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'gtmDataLayer', '{{ gtm_id }}');
        {% endif %}

        (function (d) {
            var wf = d.createElement("script");
            var s = d.scripts[0];
            wf.src = "{{ preload('https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js', {as: 'script', nopush: true}) }}";
            wf.integrity = 'sha384-0bIyOfFEbXDmR9pWVT6PKyzSRIx8gTXuOsrfXQA51wfXn3LRXt+ih6riwq9Zv2yn';
            wf.crossOrigin = 'anonymous';
            s.parentNode.insertBefore(wf, s);
        })(document);
    </script>

{% endblock %}

{% block content %}
    {% if gtm_id %}
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id={{ gtm_id }}" height="0" width="0"
                    style="display:none; visibility:hidden"></iframe>
        </noscript>
    {% endif %}

    <div class="global-wrapper" data-behaviour="{% if cookie_consent %} CookieOverlay {% endif %}FragmentHandler Math{% if hypothesis ?? false %} HypothesisLoader{% endif %}"
        {% if item is defined and item is not null %}
            data-item-type="{% if item.type is defined %}{{ item.type }}{% else %}{{ item.identifier.type }}{% endif %}"
        {% endif %}
    >

        <div class="global-inner">

            {% if header %}
                <div class="wrapper wrapper--site-header">
                    {{ render_pattern(header) }}
                </div>
            {% endif %}

            {% if (app.session and app.session.started) or app.request.hasPreviousSession %}
                {% for type, messages in app.session.flashbag.all %}
                    {% for message in messages %}
                        {{ info_bar(message, type) }}
                    {% endfor %}
                {% endfor %}
            {% endif %}

            {% for infoBar in infoBars %}
                {{ render_pattern(infoBar) }}
            {% endfor %}

            <main role="main" class="main">

                {% block body %}{% endblock %}

            </main>

            {% if emailCta %}
                {{ render_pattern(emailCta) }}
            {% endif %}

            {% if footer %}
                {{ render_pattern(footer) }}
            {% endif %}

        </div>

    </div>
        <script>
            window.elifeConfig = window.elifeConfig || {};

            window.elifeConfig.scriptPaths = [
                {% block javascripts deferred %}
                    {% for javascript in javascripts %}
                        '{{ preload(asset(javascript), {as: 'script', nopush: true}) }}'{% if not loop.last %},{% endif %}
                    {% endfor %}
                {% endblock %}
            ];

            {% if hypothesis ?? false %}
            window.elifeConfig.hypothesis = {
              usernameUrl: '{{ absolute_url(path('profile', {id: 'placeholder'})|replace({'placeholder': ''})) }}',
              services: [{
                apiUrl: '{{ hypothesis_api }}',
                authority: '{{ hypothesis_authority }}',
                grantToken: {% if app.user %}'{{ hypothesis_token(app.user) }}'{% else %}null{% endif %},
                icon: '{{ absolute_url(asset('assets/favicons/favicon.svg')) }}'
                  {%- if not app.user %},
                onLoginRequest: function () {
                  window.location.assign('{{ path('log-in') }}');
                },
                onSignupRequest: function () {
                  window.location.assign('{{ path('log-in') }}');
                }
                  {%- else %},
                onLogoutRequest: function () {
                  window.location.assign('{{ path('log-out') }}');
                },
                onProfileRequest: function () {
                  window.location.assign('{{ path('profile', {id: app.user.username}) }}');
                }
                  {%- endif %}
              }]
            };
            {% endif %}

            window.elifeConfig.domain = '{{ app.request.host|split('.')|slice(-2)|join('.') }}';

            {% include '@build/assets/patterns/js/elife-loader.js' %}

        </script>

    {% block stylesheets deferred %}
    {% for stylesheet in stylesheets %}
        <link href="{{ preload(asset(stylesheet), {as: 'style', nopush: true}) }}" rel="stylesheet">
    {% endfor %}
    {% endblock %}

{% endblock %}
