#Dockerfile.npm

ARG node_version
FROM node:${node_version} as npm

RUN apt-get update && apt-get install --no-install-recommends -y \
    nasm \
    libvips-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /srv/journal/

RUN npm install

#Dockerfile.composer

FROM composer:1.6.4

ARG composer_dev_arg

RUN apk add --no-cache \
    patch

WORKDIR /srv/journal/

RUN composer --no-interaction install ${composer_dev_arg} --ignore-platform-reqs --no-autoloader --no-suggest --prefer-dist

RUN composer --no-interaction dump-autoload ${composer_dev_arg} --classmap-authoritative

#Dockerfile.assets-builder

WORKDIR /srv/journal/

RUN apt-get update && apt-get install --no-install-recommends -y \
    libvips \
    && rm -rf /var/lib/apt/lists/*

RUN node_modules/.bin/gulp assets

#Dockerfile

ARG php_version
FROM elifesciences/php_7.1_fpm:${php_version}

ENV PROJECT_FOLDER=/srv/journal/
ENV PHP_ENTRYPOINT=web/app.php
WORKDIR ${PROJECT_FOLDER}

USER root
RUN pecl install redis && \
    docker-php-ext-enable redis && \
    rm -rf /tmp/pear/
RUN mkdir -p build var && \
    chown --recursive elife:elife . && \
    chown --recursive www-data:www-data var

USER www-data

HEALTHCHECK --interval=5s CMD HTTP_HOST=localhost assert_fpm /ping 'pong'

#Dockerfile.critical_css

FROM pinterb/jq:0.0.16 AS jq

# From list at https://developers.google.com/web/tools/puppeteer/troubleshooting#chrome_headless_doesnt_launch
RUN apt-get update && apt-get install --no-install-recommends -y \
    fonts-liberation \
    gconf-service \
    libappindicator1 \
    libasound2 \
    libatk1.0-0 \
    libcups2 \
    libdbus-1-3 \
    libgconf-2-4 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libvips \
    libx11-xcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxss1 \
    libxtst6 \
    locales \
    lsb-release \
    unzip \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /srv/journal/

RUN mkdir -p build/critical-css

CMD node_modules/.bin/gulp critical-css:generate && ./check_critical_css.sh